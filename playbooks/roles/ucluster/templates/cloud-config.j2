#cloud-config
users:
  - name: {{ ansible_user }}
    gecos: HPE Rancher on SimpliVity ansible account
    lock-passwd: true
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - {{ ssh_key }}
{% if proxy is defined %}
apt:
  http_proxy: {{ proxy.http }}
  https_proxy: {{ proxy.https }}
{% endif %}
write_files:
- path: /root/config-mgmtnet.sh
  content: |
    #!/bin/bash
    mask2cidr() {
        nbits=0
        IFS=.
        for dec in $1 ; do
            case $dec in
                255) let nbits+=8;;
                254) let nbits+=7;;
                252) let nbits+=6;;
                248) let nbits+=5;;
                240) let nbits+=4;;
                224) let nbits+=3;;
                192) let nbits+=2;;
                128) let nbits+=1;;
                0);;
                *) echo "Error: $dec is not recognised"; exit 1
            esac
        done
        echo "$nbits"
    }
    vmtoolsd --cmd 'info-get guestinfo.ovfEnv' > /tmp/ovfenv
    IPAddress=$(sed -n 's/.*Property oe:key="guestinfo.interface.0.ip.0.address" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
    SubnetMask=$(sed -n 's/.*Property oe:key="guestinfo.interface.0.ip.0.netmask" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
    prefix=$(mask2cidr $SubnetMask)
    Gateway=$(sed -n 's/.*Property oe:key="guestinfo.interface.0.route.0.gateway" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
    DNS=$(sed -n 's/.*Property oe:key="guestinfo.dns.servers" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
    cat > /etc/netplan/50-cloud-init.yaml <<EOF
    network:
      version: 2
      renderer: networkd
      ethernets:
        {{ rancher_iface }}:
          addresses: 
            - $IPAddress/$prefix
          gateway4: $Gateway
          nameservers:
            addresses : [$DNS]
    EOF
    sudo netplan apply

{% if iscsi1_portgroup is defined %}
- path: /root/config-iscsi1.sh
  content: |
    #!/bin/bash
    mask2cidr() {
        nbits=0
        IFS=.
        for dec in $1 ; do
            case $dec in
                255) let nbits+=8;;
                254) let nbits+=7;;
                252) let nbits+=6;;
                248) let nbits+=5;;
                240) let nbits+=4;;
                224) let nbits+=3;;
                192) let nbits+=2;;
                128) let nbits+=1;;
                0);;
                *) echo "Error: $dec is not recognised"; exit 1
            esac
        done
        echo "$nbits"
    }
    vmtoolsd --cmd 'info-get guestinfo.ovfEnv' > /tmp/ovfenv
    IPAddress=$(sed -n 's/.*Property oe:key="guestinfo.interface.1.ip.0.address" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
    SubnetMask=$(sed -n 's/.*Property oe:key="guestinfo.interface.1.ip.0.netmask" oe:value="\([^"]*\).*/\1/p' /tmp/ovfenv)
    prefix=$(mask2cidr $SubnetMask)
    cat > /etc/netplan/iscsi1.yaml <<EOF
    network:
      version: 2
      renderer: networkd
      ethernets:
        {{ iscsi1_iface }}:
          mtu: 9000
          addresses: 
            - $IPAddress/$prefix
    EOF
    sudo netplan apply
{% endif %}
{% if proxy is defined %}
- path: /etc/environment
  owner: root:root
  content: |
    HTTP_PROXY={{ proxy.http }}
    HTTPS_PROXY={{ proxy.https }}
    NO_PROXY={{ proxy.except }},{{ rancher_subnet }}
    http_proxy={{ proxy.http }}
    https_proxy={{ proxy.https }}
    no_proxy={{ proxy.except }},{{ rancher_subnet }}
{% endif %}

ca-certs:
  trusted:
{% for ca in additional_cas %}
  - |
    {{ lookup('file',ca) | indent(width=4, indentfirst=false) }}
{% endfor %}

runcmd:
- bash /root/config-mgmtnet.sh
