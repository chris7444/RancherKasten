###
# Copyright (2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---

- name: Create the namespace for Kasten
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/kube_config.{{ user_cluster.name }}"
    definition:
      kind: Namespace
      apiVersion: v1
      metadata:
        name: kasten-io

- name: Create a PV pointing to the NFS share for backup data
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/kube_config.{{ user_cluster.name }}"
    definition:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: kasten-nfs-location
      spec:
        storageClassName: backup
        capacity:
          storage: 100Gi 
        accessModes:
        - ReadWriteMany
        claimRef:
          namespace: kasten-io
          name: kasten-location
        nfs: 
          path: "{{ kasten_nfs_share_path }}"
          server: "{{ kasten_nfs_server  }}"
        persistentVolumeReclaimPolicy: Retain

- name: Assign the PV to Kasten
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/kube_config.{{ user_cluster.name }}"
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: kasten-location
        namespace: kasten-io
      spec:
        storageClassName: backup
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 100Gi 

- name: create an Ingress for the Kasten GUI
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/kube_config.{{ user_cluster.name }}"
    definition: "{{ lookup('template','ingress.yml.j2') }}" 

- name: Create a Secret for the S3 Object Store
  k8s:
    state: present
    kubeconfig: "{{ install_dir }}/kube_config.{{ user_cluster.name }}"
    definition: "{{ lookup('template','location-secret.yml.j2') }}" 

- name: Produce the Location manifest for later consumption
  template:
    src: location.yml.j2
    dest: "{{ install_dir }}/kasten-location.{{ user_cluster.name }}.yml"

- debug: msg="Kasten Location manifest created {{ ':'}} {{ install_dir }}/kasten-location.{{ user_cluster.name }}.yml"
