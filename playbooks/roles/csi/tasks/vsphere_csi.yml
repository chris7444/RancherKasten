###
# Copyright (2020) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- name: Create secret for vSphere credentials
  k8s:
    state: present
    validate_certs: true
    kubeconfig: "{{ uc_kube_config_file }}"
    definition: 
      apiVersion: v1
      kind: Secret
      metadata:
        name: vsphere-config-secret
        namespace: kube-system
      data:
        csi-vsphere.conf: "{{ lookup('template', 'vsphere-csi/csi-vsphere.conf.j2') | b64encode }}"

- name: Deploy CSI Manifests
  k8s:
    state: present
    validate_certs: true
    kubeconfig: "{{ uc_kube_config_file }}"
    definition: "{{ lookup('template',item) }}"
  with_items:
    - vsphere-csi/vsphere-csi-controller-deployment.yaml
    - vsphere-csi/vsphere-csi-controller-rbac.yaml
    - vsphere-csi/vsphere-csi-node-ds.yaml

- name: See if the CSI Storage Class exists
  k8s_info:
    kubeconfig: "{{ uc_kube_config_file }}"
    kind: StorageClass
    name: "{{ user_cluster.csi.vsphere.storageclass_name }}"
    validate_certs: true
  register: sc

- debug:
    msg: "Storage Class '{{ user_cluster.csi.vsphere.storageclass_name }}' already exists."
  when: sc.resources | count > 0

- block:

  - name: Get CSI Datastore Info
    vmware_datastore_info:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter_name: '{{ datacenter }}'
      name: "{{ user_cluster.csi.vsphere.datastore_name | default(datastores[0]) }}"
      validate_certs:  "{{ vcenter_validate_certs }}"
    delegate_to: localhost
    register: csi_datastore_info

  - name: Create CSI Storage Class
    k8s:
      state: present
      validate_certs: true
      kubeconfig: "{{ uc_kube_config_file }}"
      definition: "{{ lookup('template','vsphere-csi/csi-sc.yml.j2') }}"

  - debug:
      msg: "Storage Class '{{ user_cluster.csi.vsphere.storageclass_name }}' Created"

  when: sc.resources | count < 1
